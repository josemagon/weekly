[{"C:\\Users\\josema\\Documents\\weekly\\front\\src\\index.js":"1","C:\\Users\\josema\\Documents\\weekly\\front\\src\\App.js":"2","C:\\Users\\josema\\Documents\\weekly\\front\\src\\reportWebVitals.js":"3","C:\\Users\\josema\\Documents\\weekly\\front\\src\\firebaseConfig.js":"4","C:\\Users\\josema\\Documents\\weekly\\front\\src\\Week.js":"5","C:\\Users\\josema\\Documents\\weekly\\front\\src\\LogIn.js":"6","C:\\Users\\josema\\Documents\\weekly\\front\\src\\Spinner.js":"7","C:\\Users\\josema\\Documents\\weekly\\front\\src\\Day.js":"8","C:\\Users\\josema\\Documents\\weekly\\front\\src\\NewToDoForm.js":"9","C:\\Users\\josema\\Documents\\weekly\\front\\src\\ToDoList.js":"10"},{"size":457,"mtime":1613230169886,"results":"11","hashOfConfig":"12"},{"size":2307,"mtime":1628100315122,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":319,"mtime":1627875988944,"results":"15","hashOfConfig":"12"},{"size":5771,"mtime":1627875779983,"results":"16","hashOfConfig":"12"},{"size":1221,"mtime":1627069182990,"results":"17","hashOfConfig":"12"},{"size":296,"mtime":1613255007562,"results":"18","hashOfConfig":"12"},{"size":1016,"mtime":1628100394516,"results":"19","hashOfConfig":"12"},{"size":1868,"mtime":1627857659458,"results":"20","hashOfConfig":"12"},{"size":2266,"mtime":1627875690618,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1804zbm",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\josema\\Documents\\weekly\\front\\src\\index.js",[],["44","45"],"C:\\Users\\josema\\Documents\\weekly\\front\\src\\App.js",["46"],"C:\\Users\\josema\\Documents\\weekly\\front\\src\\reportWebVitals.js",[],"C:\\Users\\josema\\Documents\\weekly\\front\\src\\firebaseConfig.js",[],"C:\\Users\\josema\\Documents\\weekly\\front\\src\\Week.js",["47"],"import React, { Component } from \"react\";\r\nimport Day from './Day';\r\nimport NewToDoForm from \"./NewToDoForm\";\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport firebaseConfig from \"./firebaseConfig\";\r\nimport Spinner from './Spinner';\r\n\r\nclass Week extends Component{\r\n\r\n    dayNames = [\"Sunday\" , \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            days : [],\r\n            showForm: false,\r\n            selectedDay: -1,\r\n            loading: true\r\n        }\r\n\r\n        this.initDays = this.initDays.bind(this);\r\n        this.showToDoForm = this.showToDoForm.bind(this);\r\n        this.addToDo = this.addToDo.bind(this);\r\n        this.toggleShowForm = this.toggleShowForm.bind(this);\r\n        this.toggleLoading = this.toggleLoading.bind(this);\r\n        this.getTodosFromFirebase = this.getTodosFromFirebase.bind(this);\r\n        this.deleteAllTodos = this.deleteAllTodos.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n          }else {\r\n            firebase.app(); // if already initialized, use that one\r\n          }\r\n        // this.initDays();\r\n        this.getTodosFromFirebase(this.toggleLoading);\r\n    }\r\n\r\n    toggleLoading(){\r\n        var temp = this.state.loading;\r\n        this.setState({\r\n            loading: !temp\r\n        });\r\n    }\r\n\r\n    getTodosFromFirebase(callback){\r\n        this.initDays();\r\n        const db = firebase.firestore();\r\n        db.collection('users').doc(this.props.user.uid).collection(\"todos\").where(\"date\", \">=\", new Date(this.state.days[0].date)).where(\"date\", \"<=\", new Date(this.state.days[6].date)).onSnapshot((todossnapshot => {\r\n                todossnapshot.docChanges().forEach((change) => {\r\n                    if (change.type === \"added\") {\r\n                        var temp_days = this.state.days;\r\n                        var newtodo = {\r\n                            todo : change.doc.data().todo,\r\n                            id : change.doc.ref.id\r\n                        };\r\n                        temp_days[change.doc.data().day].todos.push(newtodo);\r\n                        this.setState({\r\n                            days : temp_days\r\n                        });\r\n                    }\r\n                    if (change.type === \"modified\") {\r\n                        console.log(\"Modified todo: \", change.doc.data());\r\n                    }\r\n                    if (change.type === \"removed\") {\r\n                        console.log(\"Removed todo: \", change.doc.data());\r\n                        var temp_days = this.state.days;\r\n                        temp_days[change.doc.data().day].todos = temp_days[change.doc.data().day].todos.filter(todo => todo.id !== change.doc.ref.id);\r\n                        this.setState({\r\n                            days : temp_days\r\n                        });\r\n                    }\r\n                });\r\n                this.setState({loading: false});\r\n        }));\r\n    }\r\n\r\n    deleteAllTodos(callback){\r\n        console.log(\"deleting everything\");\r\n        const db = firebase.firestore(); \r\n        db.collection('users').doc(this.props.user.uid).collection(\"todos\").then(todos => {\r\n            todos.forEach(todo => {\r\n                todo.ref.delete();\r\n            });\r\n        });\r\n    }\r\n\r\n    initDays(){\r\n        var day = new Date().getDay();\r\n        var afterDay = 7 - day;\r\n        var from = new Date();\r\n        from.setDate(from.getDate() - day);\r\n        var to = new Date();\r\n        to.setDate(to.getDate() + afterDay);\r\n\r\n        for (let index = 0; index < 7; index++) {\r\n            var temp_days = this.state.days;\r\n            temp_days.push({\"day\": index, \"date\": (from.getFullYear() + \"-\" + (from.getMonth() + 1) + \"-\" + from.getDate()), \"todos\": [] });\r\n            this.setState({days : temp_days});\r\n            from.setDate(from.getDate() + 1);\r\n        }\r\n    }\r\n\r\n    isNewWeek(someToDos){\r\n        var result = true;\r\n        if (someToDos){\r\n            var i = 0;\r\n            var todaydate = new Date();\r\n            var today = (todaydate.getFullYear() + \"-\" + (todaydate.getMonth() + 1) + \"-\" + todaydate.getDate());\r\n            while (i < someToDos.length && result === true) {\r\n                if (someToDos[i].date === today){\r\n                    result = false;\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    showToDoForm(aDay){\r\n        this.setState({showForm:true, selectedDay:aDay});\r\n    }\r\n\r\n    addToDo(aText){\r\n        this.toggleShowForm();\r\n\r\n\r\n        const db = firebase.firestore();\r\n\r\n        db.collection('users').doc(this.props.user.uid).collection(\"todos\").add({\r\n            day: this.state.selectedDay,\r\n            date : new Date(this.state.days[this.state.selectedDay].date),\r\n            todo : aText\r\n        });\r\n        \r\n    }\r\n\r\n    toggleShowForm(){\r\n        this.setState({\r\n            showForm: !this.state.showForm\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"Week\">\r\n                {(this.state.loading) ? <Spinner /> : <div></div>}\r\n                {this.state.showForm ? <NewToDoForm addToDo={this.addToDo} toggleShowForm={this.toggleShowForm}/> : null}\r\n                {this.state.days.map(day => {\r\n                    return (\r\n                        <Day id={day.day} key={day.day} date={day.date} todos={day.todos} showToDoForm={this.showToDoForm} name={this.dayNames[day.day]}/>\r\n                    )\r\n                })}\r\n                <div className=\"allclear\"></div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Week;","C:\\Users\\josema\\Documents\\weekly\\front\\src\\LogIn.js",[],"C:\\Users\\josema\\Documents\\weekly\\front\\src\\Spinner.js",[],"C:\\Users\\josema\\Documents\\weekly\\front\\src\\Day.js",[],"C:\\Users\\josema\\Documents\\weekly\\front\\src\\NewToDoForm.js",[],"C:\\Users\\josema\\Documents\\weekly\\front\\src\\ToDoList.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":77,"column":13,"nodeType":"54","endLine":77,"endColumn":105},{"ruleId":"55","severity":1,"message":"56","line":70,"column":29,"nodeType":"57","messageId":"58","endLine":70,"endColumn":38},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-redeclare","'temp_days' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]